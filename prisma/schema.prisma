// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id
  name      String
  email     String      @unique
  avatarUrl String?
  createdAt DateTime    @default(now())
  Chat      Chat[]
  VideoView VideoView[]
}

model Olympiad {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())

  contents Content[]
}

model Content {
  id          String   @id @default(cuid())
  title       String
  description String?
  olympiadId  String
  olympiad    Olympiad @relation(fields: [olympiadId], references: [id], onDelete: Cascade)

  videos Video[]
}

model Video {
  id        String      @id @default(cuid())
  title     String
  url       String
  contentId String
  content   Content     @relation(fields: [contentId], references: [id], onDelete: Cascade)
  VideoView VideoView[]
}

model VideoView {
  id        String   @id @default(cuid())
  userId    String
  videoId   String
  watched   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  video Video @relation(fields: [videoId], references: [id], onDelete: Cascade)

  @@unique([userId, videoId])
}

model Chat {
  id        String   @id @default(cuid())
  title     String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages Message[]
}

model Message {
  id        String   @id @default(cuid())
  chatId    String
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  sender    Sender
  content   String
  createdAt DateTime @default(now())
}

enum Sender {
  USER
  AI
}
